extends layout
block variables
    - var title = dbName

block head
    link(href= baseHref + "public/css/bootstrap.min.css", rel="stylesheet")
    link(href= baseHref + "public/css/bootstrap-theme.min.css", rel="stylesheet")
    link(href= baseHref + "public/css/style.css", rel="stylesheet")
    link(rel="prefetch", href=baseHref + "public/img/gears.gif")

    style(type="text/css").
        body {
            padding-top: 60px;
            padding-bottom: 40px;
        }

        .sidebar-nav {
            padding: 9px 0;
        }

        .sidebar-nav a {
            display: inline-block;
            text-overflow: ellipsis;
            white-space: nowrap;
            overflow: hidden;
        }

        .tooltip-inner {
            max-width: 500px;
        }

block breadcrumb
    li
        a(href=baseHref + 'db/' + dbName)
            | Database:
    li(class="dropdown")
        a(class="dropdown-toggle", href="#", data-toggle="dropdown", role="button", aria-haspopup="true", aria-expanded="false")= dbName
            span(class="caret")
        ul(class="dropdown-menu")
            each db in databases
                li
                    a(href=baseHref + 'db/' + db + '/',)= db

block content
    div(class="panel panel-default")
        div(class="panel-heading")
            h4(style="font-weight: bold;") Collections

            unless settings.read_only
                form(class="form-inline", method="POST", style="float:right;")
                    input(class="form-control", type="text", id="collection", name="collection", placeholder="Collection Name", title="Collection Name")
                    button(type="submit", class="btn btn-primary pull-right")
                        span(class="glyphicon glyphicon-plus")
                        | Create collection


            div(class="panel-body no-padding")
                table(class="table table-bordered table-striped table-condensed no-margin")
                    each c in colls
                        tr
                            td(class="col-md-2")
                                a(href= baseHref + 'db/' + dbName + '/' + c || url_encode, class="btn btn-success btn-block")
                                    span(class="glyphicon glyphicon-eye-open")
                                        br
                                        | View
                            td(class="col-md-1")
                                a(href= baseHref + 'db/' + dbName + '/export/' + c || url_encode, class="btn btn-warning btn-block")
                                    span(class="glyphicon glyphicon-floppy-save")
                                        br
                                        | Export
                            td(class="col-md-1")
                                a(href= baseHref + 'db/' + dbName + '/expArr/' + c || url_encode, class="btn btn-warning btn-block")
                                    span(class="glyphicon glyphicon-floppy-save")
                                        br
                                        | Export
                            td(class="col-md-1")
                                h3
                                    a(href= baseHref + 'db/' + dbName + '/' + c || url_encode)= c
                            unless settings.read_only
                                td(class="col-md-1")
                                    form(method="POST", id='db-' + dbName + '-' + c , action=baseHref + 'db/' + dbName + '/' + c || url_encode, style="margin: 0px;")
                                        input(type="hidden", name="_method", value="delete")
                                        button(type="submit", class="hidden")
                                    button(class="btn btn-danger btn-block deleteButton", database-name=db, childof='db-' + db)
                                        span(class="glyphicon glyphicon-trash")
                                            br
                                            | Del
    unless settings.read_only
        div(id="confirm-deletion", class="modal fade", role="dialog", aria-labelledby="confirmDeletionLabel")
            div(class="modal-dialog", role="document")
                div(class="modal-content")
                    div(class="modal-header")
                        button(type="button", class="close", data-dismiss="modal")
                            span(aria-hidden="true") &times;
                        h4(class="modal-title", id="myModalLabel") Delete collection
                    div(class="modal-body")
                        p Be careful! You are about to delete whole
                            strong
                                span(id="modal-collection-name")
                            |  database.
                        p
                            label(for="confirmation-input") Type the collection name to proceed.
                            input(type="text", id="confirmation-input", name="confirmation-input", shouldbe="", value="")
                    div(class="modal-footer")
                        button(type="button", data-dismiss="modal", class="btn", id="delete") Delete
                        button(type="button", data-dismiss="modal", class="btn btn-primary") Cancel


    if grids.length && settings.gridFSEnabled
        h2 GridFS Buckets
        table(class="table table-bordered table-striped table-condensed")
            each b in grids
                tr
                    td(class="col-md-2")
                        a(href= baseHref + 'db/' + dbName + '/gridFS/' + b, class="btn btn-success btn-block")
                            span(class="glyphicon glyphicon-eye-open")
                                br
                                | View
                    td
                        h3
                            a(href= baseHref + 'db/' + dbName + '/gridFS/' + b)= b


    //-if !settings.read_only

    div(class="panel panel-default stats")
        div(class="panel-heading")
            h4(style="font-weight: bold;") Database Status
        table(class="table table-bordered table-striped")
            tr
                td
                    strong Collections (incl. system.namespaces)
                td= stats.collections
            tr
                td
                    strong Data Size
                td= stats.dataSize
            tr
                td
                    strong Storage Size
                td= stats.storageSize
            if stats.fileSize
                tr
                    td
                        strong File Size (on disk)
                    td= stats.fileSize
            if stats.avgObjSize
                tr
                    td
                        strong Avg Obj Size #
                    td= stats.avgObjSize
            if stats.objects
                tr
                    td
                        strong Objects #
                    td= stats.objects
            if stats.numExtents
                tr
                    td
                        strong Extents #
                    td= stats.numExtents




            if stats.extentFreeListNum
                tr
                    td
                        strong Extents Free List #
                    td= stats.extentFreeListNum
            if stats.indexes
                tr
                    td
                        strong Indexes #
                    td= stats.indexes
            if stats.indexSize
                tr
                    td
                        strong Index Size #
                    td= stats.indexSize
            if stats.dataFileVersion
                tr
                    td
                        strong Data File Version
                    td= stats.dataFileVersion



block scripts
    unless settings.read_only
        script
            include ../../scripts/database.js
